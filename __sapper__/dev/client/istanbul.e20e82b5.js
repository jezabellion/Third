import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, H as validate_each_argument, v as validate_slots, e as element, c as claim_element, b as children, f as detach_dev, j as attr_dev, k as add_location, m as insert_dev, n as append_dev, p as noop, a as space, u as create_component, w as query_selector_all, g as claim_space, x as claim_component, y as mount_component, A as transition_in, B as transition_out, C as destroy_component, I as destroy_each } from './client.ae57c06b.js';
import { d as destination } from './ModalNav.a3dbe498.js';
import { H as Hero, B as Blurb, D as Divider, S as ShoeHero, f as fade } from './ShoeHero.8fe35c0d.js';
import { C as ChapterHeader } from './ChapterHeader.cf81fdac.js';

// Travel Page Data
// Istanbul

const copy = {
  blurb: 'Five days rumbling and tumbling through the wonderful textures and sounds of Istanbul',
  travelers: 'Andrea & Jeremy',
  date: '2018',
  farewell: 'Teşekkür ederim Turkey!'
};

const chapter = {
      // one: 'Aït Benhaddou',
      // two: 'Erg Chebbi'
    };

const photos = {
  // Mosques
   one: [
      { src: 'images/istanbul/IMG_3D229D115AEA-1.jpeg', alt: 'yup' },
      { src: 'images/istanbul/IMG_3D229D115AEA-10.jpeg', alt: 'yup' },
      { src: 'images/istanbul/IMG_3D229D115AEA-2.jpeg', alt: 'yup' },
      { src: 'images/istanbul/IMG_3D229D115AEA-3.jpeg', alt: 'yup' },
      { src: 'images/istanbul/IMG_162399BF1636-4.jpeg', alt: 'yup' },
      { src: 'images/istanbul/IMG_3D229D115AEA-6.jpeg', alt: 'yup' }
    ],
    // Streets
    two: [
       { src: 'images/istanbul/IMG_6A759CE0259C-11.jpeg', alt: 'yup'},
       { src: 'images/istanbul/IMG_6A759CE0259C-6.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-5.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-10.jpeg', alt: 'yup'}
     ],
     // four
     four: [
       { src: 'images/istanbul/IMG_6A759CE0259C-8.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-7.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-4.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-2.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-1.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_3D229D115AEA-5.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-3.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_6A759CE0259C-9.jpeg', alt: 'yup' }
     ],

     // Three
     three: [
       { src: 'images/istanbul/IMG_162399BF1636-1.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_162399BF1636-6.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_3D229D115AEA-8.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_3D229D115AEA-9.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_3D229D115AEA-11.jpeg', alt: 'yup' },
       { src: 'images/istanbul/IMG_3D229D115AEA-4.jpeg', alt: 'yup' }
      ]
    };

/* src/routes/istanbul.svelte generated by Svelte v3.20.1 */
const file = "src/routes/istanbul.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_3(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

// (24:2) {#each photos.two as photo, i}
function create_each_block_3(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", {});
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			add_location(img, file, 25, 13, 791);
			add_location(figure, file, 25, 5, 783);
			attr_dev(div, "class", "container image-gallery");
			add_location(div, file, 24, 3, 740);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_3.name,
		type: "each",
		source: "(24:2) {#each photos.two as photo, i}",
		ctx
	});

	return block;
}

// (32:2) {#each photos.four as photo, i}
function create_each_block_2(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", {});
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			add_location(img, file, 33, 13, 961);
			add_location(figure, file, 33, 5, 953);
			attr_dev(div, "class", "container image-gallery");
			add_location(div, file, 32, 3, 910);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_2.name,
		type: "each",
		source: "(32:2) {#each photos.four as photo, i}",
		ctx
	});

	return block;
}

// (40:2) {#each photos.one as photo, i}
function create_each_block_1(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", {});
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			add_location(img, file, 41, 13, 1130);
			add_location(figure, file, 41, 5, 1122);
			attr_dev(div, "class", "container image-gallery");
			add_location(div, file, 40, 3, 1079);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(40:2) {#each photos.one as photo, i}",
		ctx
	});

	return block;
}

// (48:2) {#each photos.three as photo, i}
function create_each_block(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", {});
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			add_location(img, file, 49, 13, 1301);
			add_location(figure, file, 49, 5, 1293);
			attr_dev(div, "class", "container image-gallery");
			add_location(div, file, 48, 3, 1250);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(48:2) {#each photos.three as photo, i}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t0;
	let div;
	let t1;
	let t2;
	let t3;
	let t4;
	let t5;
	let t6;
	let t7;
	let t8;
	let t9;
	let t10;
	let current;
	document.title = title_value = destination.two;

	const hero = new Hero({
			props: {
				current: "istanbul",
				destHead: destination.two
			},
			$$inline: true
		});

	const blurb = new Blurb({
			props: {
				dateCopy: copy.date,
				TravlerCopy: copy.travelers,
				blurbCopy: copy.blurb
			},
			$$inline: true
		});

	let each_value_3 = photos.two;
	validate_each_argument(each_value_3);
	let each_blocks_3 = [];

	for (let i = 0; i < each_value_3.length; i += 1) {
		each_blocks_3[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
	}

	const divider0 = new Divider({ $$inline: true });
	let each_value_2 = photos.four;
	validate_each_argument(each_value_2);
	let each_blocks_2 = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	const divider1 = new Divider({ $$inline: true });
	let each_value_1 = photos.one;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const divider2 = new Divider({ $$inline: true });
	let each_value = photos.three;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const chapterheader = new ChapterHeader({
			props: { title: copy.farewell },
			$$inline: true
		});

	const shoehero = new ShoeHero({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			div = element("div");
			create_component(hero.$$.fragment);
			t1 = space();
			create_component(blurb.$$.fragment);
			t2 = space();

			for (let i = 0; i < each_blocks_3.length; i += 1) {
				each_blocks_3[i].c();
			}

			t3 = space();
			create_component(divider0.$$.fragment);
			t4 = space();

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].c();
			}

			t5 = space();
			create_component(divider1.$$.fragment);
			t6 = space();

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t7 = space();
			create_component(divider2.$$.fragment);
			t8 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t9 = space();
			create_component(chapterheader.$$.fragment);
			t10 = space();
			create_component(shoehero.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-5gapta\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			claim_component(hero.$$.fragment, div_nodes);
			t1 = claim_space(div_nodes);
			claim_component(blurb.$$.fragment, div_nodes);
			t2 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks_3.length; i += 1) {
				each_blocks_3[i].l(div_nodes);
			}

			t3 = claim_space(div_nodes);
			claim_component(divider0.$$.fragment, div_nodes);
			t4 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].l(div_nodes);
			}

			t5 = claim_space(div_nodes);
			claim_component(divider1.$$.fragment, div_nodes);
			t6 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div_nodes);
			}

			t7 = claim_space(div_nodes);
			claim_component(divider2.$$.fragment, div_nodes);
			t8 = claim_space(div_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t9 = claim_space(div_nodes);
			claim_component(chapterheader.$$.fragment, div_nodes);
			t10 = claim_space(div_nodes);
			claim_component(shoehero.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "travelPage");
			add_location(div, file, 18, 0, 537);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			mount_component(hero, div, null);
			append_dev(div, t1);
			mount_component(blurb, div, null);
			append_dev(div, t2);

			for (let i = 0; i < each_blocks_3.length; i += 1) {
				each_blocks_3[i].m(div, null);
			}

			append_dev(div, t3);
			mount_component(divider0, div, null);
			append_dev(div, t4);

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].m(div, null);
			}

			append_dev(div, t5);
			mount_component(divider1, div, null);
			append_dev(div, t6);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div, null);
			}

			append_dev(div, t7);
			mount_component(divider2, div, null);
			append_dev(div, t8);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t9);
			mount_component(chapterheader, div, null);
			append_dev(div, t10);
			mount_component(shoehero, div, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*destination*/ 0) && title_value !== (title_value = destination.two)) {
				document.title = title_value;
			}

			if (dirty & /*photos*/ 0) {
				each_value_3 = photos.two;
				validate_each_argument(each_value_3);
				let i;

				for (i = 0; i < each_value_3.length; i += 1) {
					const child_ctx = get_each_context_3(ctx, each_value_3, i);

					if (each_blocks_3[i]) {
						each_blocks_3[i].p(child_ctx, dirty);
					} else {
						each_blocks_3[i] = create_each_block_3(child_ctx);
						each_blocks_3[i].c();
						each_blocks_3[i].m(div, t3);
					}
				}

				for (; i < each_blocks_3.length; i += 1) {
					each_blocks_3[i].d(1);
				}

				each_blocks_3.length = each_value_3.length;
			}

			if (dirty & /*photos*/ 0) {
				each_value_2 = photos.four;
				validate_each_argument(each_value_2);
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks_2[i]) {
						each_blocks_2[i].p(child_ctx, dirty);
					} else {
						each_blocks_2[i] = create_each_block_2(child_ctx);
						each_blocks_2[i].c();
						each_blocks_2[i].m(div, t5);
					}
				}

				for (; i < each_blocks_2.length; i += 1) {
					each_blocks_2[i].d(1);
				}

				each_blocks_2.length = each_value_2.length;
			}

			if (dirty & /*photos*/ 0) {
				each_value_1 = photos.one;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div, t7);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*photos*/ 0) {
				each_value = photos.three;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, t9);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(hero.$$.fragment, local);
			transition_in(blurb.$$.fragment, local);
			transition_in(divider0.$$.fragment, local);
			transition_in(divider1.$$.fragment, local);
			transition_in(divider2.$$.fragment, local);
			transition_in(chapterheader.$$.fragment, local);
			transition_in(shoehero.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(hero.$$.fragment, local);
			transition_out(blurb.$$.fragment, local);
			transition_out(divider0.$$.fragment, local);
			transition_out(divider1.$$.fragment, local);
			transition_out(divider2.$$.fragment, local);
			transition_out(chapterheader.$$.fragment, local);
			transition_out(shoehero.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			destroy_component(hero);
			destroy_component(blurb);
			destroy_each(each_blocks_3, detaching);
			destroy_component(divider0);
			destroy_each(each_blocks_2, detaching);
			destroy_component(divider1);
			destroy_each(each_blocks_1, detaching);
			destroy_component(divider2);
			destroy_each(each_blocks, detaching);
			destroy_component(chapterheader);
			destroy_component(shoehero);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let visible = true;
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Istanbul> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Istanbul", $$slots, []);

	$$self.$capture_state = () => ({
		Hero,
		Divider,
		Blurb,
		ChapterHeader,
		ShoeHero,
		fade,
		destination,
		copy,
		chapter,
		photos,
		visible
	});

	$$self.$inject_state = $$props => {
		if ("visible" in $$props) visible = $$props.visible;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [];
}

class Istanbul extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Istanbul",
			options,
			id: create_fragment.name
		});
	}
}

export default Istanbul;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
