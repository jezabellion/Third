h1.svelte-1hjjbzs,p.svelte-1hjjbzs{margin:0 auto}h1.svelte-1hjjbzs{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-1hjjbzs{margin:1em auto}@media(min-width: 480px){h1.svelte-1hjjbzs{font-size:4em}}
h1.svelte-13l94pn,figure.svelte-13l94pn,p.svelte-13l94pn{text-align:center;margin:0 auto}h1.svelte-13l94pn{font-size:2.8em;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0}figure.svelte-13l94pn{margin:0 0 1em 0}img.svelte-13l94pn{width:100%;max-width:400px;margin:0 0 1em 0}p.svelte-13l94pn{margin:1em auto}@media(min-width: 480px){h1.svelte-13l94pn{font-size:4em}}
.image-gallery.svelte-fpa6fq figure img.svelte-fpa6fq{margin-bottom:30px}h1.svelte-fpa6fq.svelte-fpa6fq{font-family:'Engagement', cursive;font-size:8rem;text-align:center}h2.svelte-fpa6fq.svelte-fpa6fq{font-family:'Engagement', cursive;font-size:4rem;text-align:center}.blurb.svelte-fpa6fq.svelte-fpa6fq,.chapter-header.svelte-fpa6fq.svelte-fpa6fq{margin:6rem 14rem}.blurb.svelte-fpa6fq p.svelte-fpa6fq{font-family:'Playfair Display', serif;font-size:1.5rem;text-align:center;color:pink}.blurb.svelte-fpa6fq p.svelte-fpa6fq:first-child{font-size:2rem;text-align:center}.chapter-header.svelte-fpa6fq p.svelte-fpa6fq{font-size:1.5rem;margin-top:0px;text-align:center}.hero.svelte-fpa6fq.svelte-fpa6fq{background:url('../images/istanbul-thumb.jpg');background-position:center;background-size:cover}
.image-gallery.svelte-14vpw1e figure img.svelte-14vpw1e{margin-bottom:30px}
*{box-sizing:border-box}html,body{margin:0;padding:0}
.image-gallery.svelte-1806rlb figure img.svelte-1806rlb{margin-bottom:30px}
ul.svelte-4fatyy{margin:0 0 1em 0;line-height:1.5}
.content.svelte-3nu9wu h2{font-size:1.4em;font-weight:500}.content.svelte-3nu9wu pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-3nu9wu pre code{background-color:transparent;padding:0}.content.svelte-3nu9wu ul{line-height:1.5}.content.svelte-3nu9wu li{margin:0 0 0.5em 0}
h1.svelte-t78md3{color:#969CA8;text-align:center;font-family:'Engagement', cursive;font-size:8rem;text-align:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */