import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, a as space, t as text, c as claim_element, b as children, f as detach_dev, g as claim_space, h as claim_text, j as attr_dev, k as add_location, m as insert_dev, n as append_dev, p as noop, z as identity, q as create_component, r as claim_component, u as mount_component, A as set_data_dev, w as transition_in, B as add_render_callback, C as create_in_transition, x as transition_out, y as destroy_component, D as validate_each_argument, E as empty, F as query_selector_all, G as destroy_each } from './client.b153ca83.js';
import { d as destination, b as blurb, c as chapter, p as photosOne, a as photosTwo } from './morocco.348cdf80.js';
import { C as ChapterHeader } from './ChapterHeader.a841dea8.js';

/* src/components/TravelPageNav.svelte generated by Svelte v3.20.1 */
const file = "src/components/TravelPageNav.svelte";

function create_fragment(ctx) {
	let div4;
	let nav;
	let div0;
	let a0;
	let img;
	let img_src_value;
	let t0;
	let a1;
	let span0;
	let t1;
	let span1;
	let t2;
	let span2;
	let t3;
	let div3;
	let div2;
	let div1;
	let a2;
	let t4_value = destination.one + "";
	let t4;
	let t5;
	let a3;
	let t6_value = destination.two + "";
	let t6;
	let t7;
	let a4;
	let t8_value = destination.three + "";
	let t8;
	let t9;
	let a5;
	let t10_value = destination.four + "";
	let t10;

	const block = {
		c: function create() {
			div4 = element("div");
			nav = element("nav");
			div0 = element("div");
			a0 = element("a");
			img = element("img");
			t0 = space();
			a1 = element("a");
			span0 = element("span");
			t1 = space();
			span1 = element("span");
			t2 = space();
			span2 = element("span");
			t3 = space();
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			a2 = element("a");
			t4 = text(t4_value);
			t5 = space();
			a3 = element("a");
			t6 = text(t6_value);
			t7 = space();
			a4 = element("a");
			t8 = text(t8_value);
			t9 = space();
			a5 = element("a");
			t10 = text(t10_value);
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			nav = claim_element(div4_nodes, "NAV", { class: true });
			var nav_nodes = children(nav);
			div0 = claim_element(nav_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { class: true, href: true });
			var a0_nodes = children(a0);

			img = claim_element(a0_nodes, "IMG", {
				alt: true,
				src: true,
				width: true,
				height: true
			});

			a0_nodes.forEach(detach_dev);
			t0 = claim_space(div0_nodes);

			a1 = claim_element(div0_nodes, "A", {
				role: true,
				class: true,
				"aria-label": true,
				"aria-expanded": true
			});

			var a1_nodes = children(a1);
			span0 = claim_element(a1_nodes, "SPAN", { "aria-hidden": true, class: true });
			children(span0).forEach(detach_dev);
			t1 = claim_space(a1_nodes);
			span1 = claim_element(a1_nodes, "SPAN", { "aria-hidden": true, class: true });
			children(span1).forEach(detach_dev);
			t2 = claim_space(a1_nodes);
			span2 = claim_element(a1_nodes, "SPAN", { "aria-hidden": true, class: true });
			children(span2).forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(nav_nodes);
			div3 = claim_element(nav_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			a2 = claim_element(div1_nodes, "A", { class: true, href: true });
			var a2_nodes = children(a2);
			t4 = claim_text(a2_nodes, t4_value);
			a2_nodes.forEach(detach_dev);
			t5 = claim_space(div1_nodes);
			a3 = claim_element(div1_nodes, "A", { class: true, href: true });
			var a3_nodes = children(a3);
			t6 = claim_text(a3_nodes, t6_value);
			a3_nodes.forEach(detach_dev);
			t7 = claim_space(div1_nodes);
			a4 = claim_element(div1_nodes, "A", { class: true, href: true });
			var a4_nodes = children(a4);
			t8 = claim_text(a4_nodes, t8_value);
			a4_nodes.forEach(detach_dev);
			t9 = claim_space(div1_nodes);
			a5 = claim_element(div1_nodes, "A", { class: true, href: true });
			var a5_nodes = children(a5);
			t10 = claim_text(a5_nodes, t10_value);
			a5_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			nav_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "alt", "logomark");
			if (img.src !== (img_src_value = "../wanderlust-white.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "width", "112");
			attr_dev(img, "height", "28");
			add_location(img, file, 20, 8, 907);
			attr_dev(a0, "class", "navbar-item");
			attr_dev(a0, "href", "./");
			add_location(a0, file, 19, 6, 865);
			attr_dev(span0, "aria-hidden", "true");
			attr_dev(span0, "class", "svelte-1swo7s8");
			add_location(span0, file, 23, 8, 1105);
			attr_dev(span1, "aria-hidden", "true");
			attr_dev(span1, "class", "svelte-1swo7s8");
			add_location(span1, file, 24, 8, 1146);
			attr_dev(span2, "aria-hidden", "true");
			attr_dev(span2, "class", "svelte-1swo7s8");
			add_location(span2, file, 25, 8, 1187);
			attr_dev(a1, "role", "button");
			attr_dev(a1, "class", "navbar-burger is-hidden-tablet svelte-1swo7s8");
			attr_dev(a1, "aria-label", "menu");
			attr_dev(a1, "aria-expanded", "false");
			add_location(a1, file, 22, 6, 1000);
			attr_dev(div0, "class", "navbar-brand svelte-1swo7s8");
			add_location(div0, file, 18, 4, 832);
			attr_dev(a2, "class", "navbar-item");
			attr_dev(a2, "href", "morocco");
			add_location(a2, file, 32, 10, 1370);
			attr_dev(a3, "class", "navbar-item");
			attr_dev(a3, "href", "istanbul");
			add_location(a3, file, 33, 10, 1440);
			attr_dev(a4, "class", "navbar-item");
			attr_dev(a4, "href", "peru");
			add_location(a4, file, 34, 10, 1511);
			attr_dev(a5, "class", "navbar-item");
			attr_dev(a5, "href", "russia");
			add_location(a5, file, 35, 10, 1580);
			attr_dev(div1, "class", "field is-grouped");
			add_location(div1, file, 31, 8, 1329);
			attr_dev(div2, "class", "navbar-item");
			add_location(div2, file, 30, 6, 1295);
			attr_dev(div3, "class", "navbar-end is-hidden-mobile");
			add_location(div3, file, 29, 4, 1247);
			attr_dev(nav, "class", "navbar is-transparent is-spaced");
			add_location(nav, file, 17, 2, 782);
			attr_dev(div4, "class", "hero-head");
			add_location(div4, file, 16, 0, 756);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, nav);
			append_dev(nav, div0);
			append_dev(div0, a0);
			append_dev(a0, img);
			append_dev(div0, t0);
			append_dev(div0, a1);
			append_dev(a1, span0);
			append_dev(a1, t1);
			append_dev(a1, span1);
			append_dev(a1, t2);
			append_dev(a1, span2);
			append_dev(nav, t3);
			append_dev(nav, div3);
			append_dev(div3, div2);
			append_dev(div2, div1);
			append_dev(div1, a2);
			append_dev(a2, t4);
			append_dev(div1, t5);
			append_dev(div1, a3);
			append_dev(a3, t6);
			append_dev(div1, t7);
			append_dev(div1, a4);
			append_dev(a4, t8);
			append_dev(div1, t9);
			append_dev(div1, a5);
			append_dev(a5, t10);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<TravelPageNav> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("TravelPageNav", $$slots, []);
	$$self.$capture_state = () => ({ destination });
	return [];
}

class TravelPageNav extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "TravelPageNav",
			options,
			id: create_fragment.name
		});
	}
}

function fade(node, { delay = 0, duration = 400, easing = identity }) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}

/* src/components/Hero.svelte generated by Svelte v3.20.1 */
const file$1 = "src/components/Hero.svelte";

function create_fragment$1(ctx) {
	let section;
	let t0;
	let div1;
	let div0;
	let h1;
	let t1;
	let h1_intro;
	let section_intro;
	let current;
	const travelpagenav = new TravelPageNav({ $$inline: true });

	const block = {
		c: function create() {
			section = element("section");
			create_component(travelpagenav.$$.fragment);
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t1 = text(/*destHead*/ ctx[0]);
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			claim_component(travelpagenav.$$.fragment, section_nodes);
			t0 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, /*destHead*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-1xzm540");
			add_location(h1, file$1, 32, 6, 841);
			attr_dev(div0, "class", "container");
			add_location(div0, file$1, 31, 4, 811);
			attr_dev(div1, "class", "hero-body svelte-1xzm540");
			add_location(div1, file$1, 30, 2, 783);
			attr_dev(section, "class", "hero is-link is-fullheight svelte-1xzm540");
			add_location(section, file$1, 26, 0, 685);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			mount_component(travelpagenav, section, null);
			append_dev(section, t0);
			append_dev(section, div1);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t1);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*destHead*/ 1) set_data_dev(t1, /*destHead*/ ctx[0]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(travelpagenav.$$.fragment, local);

			if (!h1_intro) {
				add_render_callback(() => {
					h1_intro = create_in_transition(h1, fade, { duration: 2000 });
					h1_intro.start();
				});
			}

			if (!section_intro) {
				add_render_callback(() => {
					section_intro = create_in_transition(section, fade, { duration: 500 });
					section_intro.start();
				});
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(travelpagenav.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(travelpagenav);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let visible = true;
	let { destHead } = $$props;
	const writable_props = ["destHead"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Hero> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Hero", $$slots, []);

	$$self.$set = $$props => {
		if ("destHead" in $$props) $$invalidate(0, destHead = $$props.destHead);
	};

	$$self.$capture_state = () => ({
		TravelPageNav,
		destination,
		fade,
		visible,
		destHead
	});

	$$self.$inject_state = $$props => {
		if ("visible" in $$props) visible = $$props.visible;
		if ("destHead" in $$props) $$invalidate(0, destHead = $$props.destHead);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [destHead];
}

class Hero extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { destHead: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Hero",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*destHead*/ ctx[0] === undefined && !("destHead" in props)) {
			console.warn("<Hero> was created without expected prop 'destHead'");
		}
	}

	get destHead() {
		throw new Error("<Hero>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set destHead(value) {
		throw new Error("<Hero>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Blurb.svelte generated by Svelte v3.20.1 */
const file$2 = "src/components/Blurb.svelte";

function create_fragment$2(ctx) {
	let div;
	let p0;
	let t0;
	let t1;
	let p1;
	let t2;
	let t3;
	let p2;
	let t4;

	const block = {
		c: function create() {
			div = element("div");
			p0 = element("p");
			t0 = text(/*blurbCopy*/ ctx[0]);
			t1 = space();
			p1 = element("p");
			t2 = text("* * *");
			t3 = space();
			p2 = element("p");
			t4 = text("Andrea & Jeremy");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			p0 = claim_element(div_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, /*blurbCopy*/ ctx[0]);
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			p1 = claim_element(div_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t2 = claim_text(p1_nodes, "* * *");
			p1_nodes.forEach(detach_dev);
			t3 = claim_space(div_nodes);
			p2 = claim_element(div_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t4 = claim_text(p2_nodes, "Andrea & Jeremy");
			p2_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p0, "class", "svelte-hyqer4");
			add_location(p0, file$2, 26, 2, 567);
			attr_dev(p1, "class", "svelte-hyqer4");
			add_location(p1, file$2, 27, 2, 588);
			attr_dev(p2, "class", "svelte-hyqer4");
			add_location(p2, file$2, 28, 2, 603);
			attr_dev(div, "class", "container blurb svelte-hyqer4");
			add_location(div, file$2, 25, 0, 535);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, p0);
			append_dev(p0, t0);
			append_dev(div, t1);
			append_dev(div, p1);
			append_dev(p1, t2);
			append_dev(div, t3);
			append_dev(div, p2);
			append_dev(p2, t4);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*blurbCopy*/ 1) set_data_dev(t0, /*blurbCopy*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { blurbCopy } = $$props;
	const writable_props = ["blurbCopy"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Blurb> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Blurb", $$slots, []);

	$$self.$set = $$props => {
		if ("blurbCopy" in $$props) $$invalidate(0, blurbCopy = $$props.blurbCopy);
	};

	$$self.$capture_state = () => ({ blurb, blurbCopy });

	$$self.$inject_state = $$props => {
		if ("blurbCopy" in $$props) $$invalidate(0, blurbCopy = $$props.blurbCopy);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [blurbCopy];
}

class Blurb extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { blurbCopy: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Blurb",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*blurbCopy*/ ctx[0] === undefined && !("blurbCopy" in props)) {
			console.warn("<Blurb> was created without expected prop 'blurbCopy'");
		}
	}

	get blurbCopy() {
		throw new Error("<Blurb>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set blurbCopy(value) {
		throw new Error("<Blurb>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/morocco.svelte generated by Svelte v3.20.1 */
const file$3 = "src/routes/morocco.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

// (32:1) {#each photosOne as photo, i}
function create_each_block_2(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true, class: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			attr_dev(img, "class", "svelte-1u9i392");
			add_location(img, file$3, 33, 12, 868);
			attr_dev(figure, "class", "svelte-1u9i392");
			add_location(figure, file$3, 33, 4, 860);
			attr_dev(div, "class", "container image-gallery svelte-1u9i392");
			add_location(div, file$3, 32, 2, 818);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_2.name,
		type: "each",
		source: "(32:1) {#each photosOne as photo, i}",
		ctx
	});

	return block;
}

// (40:1) {#each photosTwo as photo, i}
function create_each_block_1(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true, class: true });
			figure_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			attr_dev(img, "class", "svelte-1u9i392");
			add_location(img, file$3, 41, 12, 1055);
			attr_dev(figure, "class", "svelte-1u9i392");
			add_location(figure, file$3, 41, 4, 1047);
			attr_dev(div, "class", "container image-gallery svelte-1u9i392");
			add_location(div, file$3, 40, 2, 1005);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(40:1) {#each photosTwo as photo, i}",
		ctx
	});

	return block;
}

// (48:1) {#each photosTwo as photo, i}
function create_each_block(ctx) {
	let div;
	let figure;
	let img;
	let img_src_value;
	let img_alt_value;
	let t;

	const block = {
		c: function create() {
			div = element("div");
			figure = element("figure");
			img = element("img");
			t = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			figure = claim_element(div_nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);
			img = claim_element(figure_nodes, "IMG", { src: true, alt: true, class: true });
			figure_nodes.forEach(detach_dev);
			t = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*photo*/ ctx[1].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*photo*/ ctx[1].alt);
			attr_dev(img, "class", "svelte-1u9i392");
			add_location(img, file$3, 49, 12, 1242);
			attr_dev(figure, "class", "svelte-1u9i392");
			add_location(figure, file$3, 49, 4, 1234);
			attr_dev(div, "class", "container image-gallery svelte-1u9i392");
			add_location(div, file$3, 48, 2, 1192);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, figure);
			append_dev(figure, img);
			append_dev(div, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(48:1) {#each photosTwo as photo, i}",
		ctx
	});

	return block;
}

function create_fragment$3(ctx) {
	let title_value;
	let t0;
	let t1;
	let t2;
	let t3;
	let t4;
	let t5;
	let t6;
	let each2_anchor;
	let current;
	document.title = title_value = destination.one;

	const hero = new Hero({
			props: { destHead: destination.one },
			$$inline: true
		});

	const blurb_1 = new Blurb({
			props: { blurbCopy: blurb.morocco },
			$$inline: true
		});

	let each_value_2 = photosOne;
	validate_each_argument(each_value_2);
	let each_blocks_2 = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	const chapterheader0 = new ChapterHeader({
			props: { title: chapter.one },
			$$inline: true
		});

	let each_value_1 = photosTwo;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const chapterheader1 = new ChapterHeader({
			props: { title: chapter.two },
			$$inline: true
		});

	let each_value = photosTwo;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			create_component(hero.$$.fragment);
			t1 = space();
			create_component(blurb_1.$$.fragment);
			t2 = space();

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].c();
			}

			t3 = space();
			create_component(chapterheader0.$$.fragment);
			t4 = space();

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t5 = space();
			create_component(chapterheader1.$$.fragment);
			t6 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each2_anchor = empty();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1nrzu7g\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(hero.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(blurb_1.$$.fragment, nodes);
			t2 = claim_space(nodes);

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].l(nodes);
			}

			t3 = claim_space(nodes);
			claim_component(chapterheader0.$$.fragment, nodes);
			t4 = claim_space(nodes);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(nodes);
			}

			t5 = claim_space(nodes);
			claim_component(chapterheader1.$$.fragment, nodes);
			t6 = claim_space(nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each2_anchor = empty();
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(hero, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(blurb_1, target, anchor);
			insert_dev(target, t2, anchor);

			for (let i = 0; i < each_blocks_2.length; i += 1) {
				each_blocks_2[i].m(target, anchor);
			}

			insert_dev(target, t3, anchor);
			mount_component(chapterheader0, target, anchor);
			insert_dev(target, t4, anchor);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(target, anchor);
			}

			insert_dev(target, t5, anchor);
			mount_component(chapterheader1, target, anchor);
			insert_dev(target, t6, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each2_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*destination*/ 0) && title_value !== (title_value = destination.one)) {
				document.title = title_value;
			}

			if (dirty & /*photosOne*/ 0) {
				each_value_2 = photosOne;
				validate_each_argument(each_value_2);
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks_2[i]) {
						each_blocks_2[i].p(child_ctx, dirty);
					} else {
						each_blocks_2[i] = create_each_block_2(child_ctx);
						each_blocks_2[i].c();
						each_blocks_2[i].m(t3.parentNode, t3);
					}
				}

				for (; i < each_blocks_2.length; i += 1) {
					each_blocks_2[i].d(1);
				}

				each_blocks_2.length = each_value_2.length;
			}

			if (dirty & /*photosTwo*/ 0) {
				each_value_1 = photosTwo;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(t5.parentNode, t5);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*photosTwo*/ 0) {
				each_value = photosTwo;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each2_anchor.parentNode, each2_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(hero.$$.fragment, local);
			transition_in(blurb_1.$$.fragment, local);
			transition_in(chapterheader0.$$.fragment, local);
			transition_in(chapterheader1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(hero.$$.fragment, local);
			transition_out(blurb_1.$$.fragment, local);
			transition_out(chapterheader0.$$.fragment, local);
			transition_out(chapterheader1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(hero, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(blurb_1, detaching);
			if (detaching) detach_dev(t2);
			destroy_each(each_blocks_2, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(chapterheader0, detaching);
			if (detaching) detach_dev(t4);
			destroy_each(each_blocks_1, detaching);
			if (detaching) detach_dev(t5);
			destroy_component(chapterheader1, detaching);
			if (detaching) detach_dev(t6);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each2_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let visible = true;
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Morocco> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Morocco", $$slots, []);

	$$self.$capture_state = () => ({
		Hero,
		Blurb,
		ChapterHeader,
		fade,
		photosOne,
		photosTwo,
		destination,
		chapter,
		blurb,
		visible
	});

	$$self.$inject_state = $$props => {
		if ("visible" in $$props) visible = $$props.visible;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [];
}

class Morocco extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Morocco",
			options,
			id: create_fragment$3.name
		});
	}
}

export default Morocco;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
