(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1586474248313;

	const files = [
		"service-worker-index.html",
		".DS_Store",
		"bulma.css",
		"favicon.png",
		"global.css",
		"great-success.png",
		"images/.DS_Store",
		"images/aaa.jpg",
		"images/bbb.jpg",
		"images/ccc.jpg",
		"images/ddd.jpg",
		"images/eee.jpg",
		"images/istanbul-thumb.jpg",
		"images/morocco/.DS_Store",
		"images/morocco/IMG_0852E891A202-1.jpeg",
		"images/morocco/IMG_0852E891A202-2.jpeg",
		"images/morocco/IMG_0852E891A202-3.jpeg",
		"images/morocco/IMG_0852E891A202-4.jpeg",
		"images/morocco/IMG_0852E891A202-5.jpeg",
		"images/morocco/IMG_0852E891A202-6.jpeg",
		"images/morocco/IMG_0B4A7FBD5D2C-1.jpeg",
		"images/morocco/IMG_0B4A7FBD5D2C-2.jpeg",
		"images/morocco/IMG_0B4A7FBD5D2C-3.jpeg",
		"images/morocco/IMG_758CCCE68AFA-2.jpeg",
		"images/morocco/IMG_758CCCE68AFA-3.jpeg",
		"images/morocco/IMG_758CCCE68AFA-4.jpeg",
		"images/morocco/IMG_758CCCE68AFA-5.jpeg",
		"images/morocco/IMG_758CCCE68AFA-6.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-1.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-2.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-3.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-4.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-5.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-6.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-7.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-8.jpeg",
		"images/morocco/IMG_83B95BE9F1B8-9.jpeg",
		"images/morocco/IMG_A09AF0DEEEBC-1.jpeg",
		"images/morocco/IMG_A09AF0DEEEBC-2.jpeg",
		"images/morocco/IMG_A09AF0DEEEBC-3.jpeg",
		"images/morocco/IMG_A09AF0DEEEBC-4.jpeg",
		"images/morocco/IMG_A09AF0DEEEBC-5.jpeg",
		"images/morocco/IMG_A942AECACB29-1.jpeg",
		"images/morocco/IMG_A942AECACB29-10.jpeg",
		"images/morocco/IMG_A942AECACB29-11.jpeg",
		"images/morocco/IMG_A942AECACB29-2.jpeg",
		"images/morocco/IMG_A942AECACB29-3.jpeg",
		"images/morocco/IMG_A942AECACB29-4.jpeg",
		"images/morocco/IMG_A942AECACB29-5.jpeg",
		"images/morocco/IMG_A942AECACB29-6.jpeg",
		"images/morocco/IMG_A942AECACB29-7.jpeg",
		"images/morocco/IMG_A942AECACB29-8.jpeg",
		"images/morocco/IMG_A942AECACB29-9.jpeg",
		"images/morocco/IMG_AEF333E26C15-1.jpeg",
		"images/morocco/IMG_AEF333E26C15-2.jpeg",
		"images/morocco/IMG_BA1EE5C061F8-1.jpeg",
		"images/morocco/IMG_BA1EE5C061F8-2.jpeg",
		"images/morocco/IMG_BA1EE5C061F8-3.jpeg",
		"images/morocco/IMG_BA1EE5C061F8-4.jpeg",
		"images/morocco/IMG_BA1EE5C061F8-5.jpeg",
		"images/morocco/IMG_F397C50B4C57-1.jpeg",
		"images/morocco/IMG_F397C50B4C57-2.jpeg",
		"images/morocco/IMG_F397C50B4C57-3.jpeg",
		"images/morocco/IMG_F397C50B4C57-4.jpeg",
		"images/morocco-thumb.jpg",
		"images/peru-thumb.jpeg",
		"images/russia-thumb.jpg",
		"images/shoes-portrait.jpg",
		"images/shoes.jpg",
		"logo-192.png",
		"logo-512.png",
		"manifest.json",
		"wanderlust-white.svg",
		"wanderlust.svg"
	];

	const shell = [
		
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
